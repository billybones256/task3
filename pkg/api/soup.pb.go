// Code generated by protoc-gen-go. DO NOT EDIT.
// source: soup.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SoupRequest struct {
	Days                 int32    `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoupRequest) Reset()         { *m = SoupRequest{} }
func (m *SoupRequest) String() string { return proto.CompactTextString(m) }
func (*SoupRequest) ProtoMessage()    {}
func (*SoupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db82f16952037d5c, []int{0}
}

func (m *SoupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoupRequest.Unmarshal(m, b)
}
func (m *SoupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoupRequest.Marshal(b, m, deterministic)
}
func (m *SoupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoupRequest.Merge(m, src)
}
func (m *SoupRequest) XXX_Size() int {
	return xxx_messageInfo_SoupRequest.Size(m)
}
func (m *SoupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SoupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SoupRequest proto.InternalMessageInfo

func (m *SoupRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type SoupResponse struct {
	Answer               string   `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoupResponse) Reset()         { *m = SoupResponse{} }
func (m *SoupResponse) String() string { return proto.CompactTextString(m) }
func (*SoupResponse) ProtoMessage()    {}
func (*SoupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db82f16952037d5c, []int{1}
}

func (m *SoupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoupResponse.Unmarshal(m, b)
}
func (m *SoupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoupResponse.Marshal(b, m, deterministic)
}
func (m *SoupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoupResponse.Merge(m, src)
}
func (m *SoupResponse) XXX_Size() int {
	return xxx_messageInfo_SoupResponse.Size(m)
}
func (m *SoupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SoupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SoupResponse proto.InternalMessageInfo

func (m *SoupResponse) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func init() {
	proto.RegisterType((*SoupRequest)(nil), "api.SoupRequest")
	proto.RegisterType((*SoupResponse)(nil), "api.SoupResponse")
}

func init() { proto.RegisterFile("soup.proto", fileDescriptor_db82f16952037d5c) }

var fileDescriptor_db82f16952037d5c = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xce, 0x2f, 0x2d,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52, 0xe4, 0xe2, 0x0e,
	0xce, 0x2f, 0x2d, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x49, 0x49,
	0xac, 0x2c, 0x96, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x95, 0xd4, 0xb8, 0x78, 0x20,
	0x4a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0xf3, 0x8a, 0xcb, 0x53,
	0x8b, 0xc0, 0xaa, 0x38, 0x83, 0xa0, 0x3c, 0x23, 0x2b, 0x2e, 0x16, 0x90, 0x3a, 0x21, 0x23, 0x2e,
	0x4e, 0xa7, 0xd2, 0xcc, 0x9c, 0x14, 0xdf, 0xd4, 0xbc, 0x52, 0x21, 0x01, 0xbd, 0xc4, 0x82, 0x4c,
	0x3d, 0x24, 0x2b, 0xa4, 0x04, 0x91, 0x44, 0x20, 0x26, 0x2a, 0x31, 0x24, 0xb1, 0x81, 0x9d, 0x64,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x46, 0xec, 0x9e, 0xa0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SoupClient is the client API for Soup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SoupClient interface {
	BuildMenu(ctx context.Context, in *SoupRequest, opts ...grpc.CallOption) (*SoupResponse, error)
}

type soupClient struct {
	cc grpc.ClientConnInterface
}

func NewSoupClient(cc grpc.ClientConnInterface) SoupClient {
	return &soupClient{cc}
}

func (c *soupClient) BuildMenu(ctx context.Context, in *SoupRequest, opts ...grpc.CallOption) (*SoupResponse, error) {
	out := new(SoupResponse)
	err := c.cc.Invoke(ctx, "/api.Soup/BuildMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SoupServer is the server API for Soup service.
type SoupServer interface {
	BuildMenu(context.Context, *SoupRequest) (*SoupResponse, error)
}

// UnimplementedSoupServer can be embedded to have forward compatible implementations.
type UnimplementedSoupServer struct {
}

func (*UnimplementedSoupServer) BuildMenu(ctx context.Context, req *SoupRequest) (*SoupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildMenu not implemented")
}

func RegisterSoupServer(s *grpc.Server, srv SoupServer) {
	s.RegisterService(&_Soup_serviceDesc, srv)
}

func _Soup_BuildMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SoupServer).BuildMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Soup/BuildMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SoupServer).BuildMenu(ctx, req.(*SoupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Soup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Soup",
	HandlerType: (*SoupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildMenu",
			Handler:    _Soup_BuildMenu_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "soup.proto",
}
